name: Check GitHub Project Status and Notify Slack

on:
  schedule:
    - cron: "0 * * * *" # 毎時実行
  workflow_dispatch: # 手動実行も許可

jobs:
  check-project-status:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Variables
        run: |
          export CURRENT_STATUS_FILE="project_status_current.json"
          export PREVIOUS_STATUS_FILE="project_status_previous.json"

      - name: Download Previous Status (Artifact)
        id: download_artifact
        uses: actions/download-artifact@v4
        with:
          name: previous-status
          path: .
        continue-on-error: true

      - name: Get GitHub Project Status
        uses: octokit/graphql-action@v2.x
        id: get_project_status # Outputsを参照するためにIDを設定
        with:
          query: |
            query getProjects($id: ID!) {
              node(id: $id) {
                ... on ProjectV2 {
                  items(first: 50) {
                    nodes {
                      id
                      content {
                        ... on Issue {
                          title
                          state
                        }
                      }
                    }
                  }
                }
              }
            }
          variables: '{"id": "PVT_kwDOABiQ984Am26J"}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Save Current Status to File
        run: |
          echo '${{ steps.get_project_status.outputs.data }}' > "$CURRENT_STATUS_FILE"

      - name: Compare Status and Notify Slack
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          # Compare current and previous status
          if [ -f "$PREVIOUS_STATUS_FILE" ]; then
            DIFF=$(diff "$PREVIOUS_STATUS_FILE" "$CURRENT_STATUS_FILE" || true)
          else
            DIFF="No previous status available for comparison."
          fi

          # Slack notification
          if [[ -z "$SLACK_WEBHOOK" ]]; then
            echo "SLACK_WEBHOOK is not set. Skipping Slack notification."
          else
            if [[ "$DIFF" != "" ]]; then
              echo "Change detected! Sending Slack notification..."
              MESSAGE="GitHub Project Status Changed:\n\`\`\`${DIFF}\`\`\`"
              curl -X POST -H 'Content-type: application/json' \
                --data "{\"text\": \"$MESSAGE\"}" $SLACK_WEBHOOK
            else
              echo "No changes detected."
            fi
          fi

      - name: Upload Current Status (Artifact)
        uses: actions/upload-artifact@v4
        with:
          name: previous-status
          path: project_status_current.json
          overwrite: true